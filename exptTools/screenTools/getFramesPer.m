function [framesPerCycle, framesPerTrial, adjustTF] = getFramesPer (display, params, giveWarnings);%%% 11/03/98 bobd:	added code to avoid divide-by-zero with temporal freqs of 0 Hzif ~exist('giveWarnings','var')	giveWarnings = 0;endif isfield(params,'temporalFrequency')	temporalFrequency = params.temporalFrequency;elseif isfield(params,'temporal')	if isfield(params.temporal,'frequency')		temporalFrequency = params.temporal.frequency;	endendif ~exist('temporalFrequency','var')	error('Could not find temporal frequency parameter in params struct.');endduration = params.duration;	% avoid divide-by-zero with temporal freqs of 0if abs(temporalFrequency) > 0	framesPerCycle = display.frameRate / abs(temporalFrequency);else	framesPerCycle = display.frameRate / 1.0e-6;	% a *very* small number to approximate 0 Hzend	actualTemporalFrequency = display.frameRate / round(framesPerCycle);if (giveWarnings & (abs(framesPerCycle-round(framesPerCycle)) > 1E-3))	fprintf('\n The actual temporal frequency is %f\n', actualTemporalFrequency);	fprintf(' or display.frameRate (%f) / %d\n\n', display.frameRate, round(framesPerCycle));	adjustTF = 1;else	adjustTF = 0;endframesPerCycle = display.frameRate / actualTemporalFrequency;cyclesPerTrial = actualTemporalFrequency * duration;floorCyclesPerTrial = floor(cyclesPerTrial);ceilCyclesPerTrial = ceil(cyclesPerTrial);if (giveWarnings & (abs(cyclesPerTrial-round(cyclesPerTrial)) > 1E-3))	fprintf('WARNING: Non-integral number of stimulus cycles.\n\n');		%If interested in adjusting the temporal frequency, you're SOL here, because	%the following lower and higher temporal frequency values do not conform to	%the above frameRate requirement (that gave birth to actualTemporalFrequency).	%If you want to figure this mess out, more power to you, brother.	%	%lowerTemporalFrequency = floorCyclesPerTrial/duration;	%higherTemporalFrequency = ceilCyclesPerTrial/duration;	%	%fprintf(' If you want to adjust the temporal frequency, you can use either\n');	%fprintf(' %f, which is %d/duration (%d/%f), or\n', ...	%	lowerTemporalFrequency, floorCyclesPerTrial,  floorCyclesPerTrial, duration);	%fprintf(' %f, which is %d/duration (%d/%f).\n\n', ...	%	higherTemporalFrequency, ceilCyclesPerTrial,  ceilCyclesPerTrial, duration);	%If interested in adjusting the time, you are A-OK	lowerTime = floorCyclesPerTrial/actualTemporalFrequency;	higherTime = ceilCyclesPerTrial/actualTemporalFrequency;	fprintf(' If you want to adjust the stimulus duration, you can use either\n');	fprintf(' %f, which is %d/actualTemporalFrequency (%d/%f), or\n', ...		lowerTime, floorCyclesPerTrial, floorCyclesPerTrial, actualTemporalFrequency);	fprintf(' %f, which is %d/actualTemporalFrequency (%d/%f).\n\n', ...		higherTime, ceilCyclesPerTrial, ceilCyclesPerTrial, actualTemporalFrequency);endframesPerCycle = round (framesPerCycle);framesPerTrial = round (display.frameRate * duration);