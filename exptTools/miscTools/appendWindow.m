function [window,x,y] = appendWindow(display,window,windowParams)%[window,x,y] = appendWindow(display,window,windowParams)%%Appends a window of type windowParams.type to the %image window.  A window is an image with values that%range between 0 and 1 and is used to multiply with %another image to restrict it spatially%%Inputs:%  display                          standard exptTools display structure%  window                           a window image (0<=window<=1)%  windowParmams                    structure with the following fields%     windowParams.center           center of new window in visual angle %                                     coordinates %    windowParams.size              size of new window in visual angle%                                     coordinates %    windowParams.type              string - one of the following:%     'rect'                          rectangle%     'circle'                        circle with apect ratio%                                       determined by windowParams.size%     'Gabor'                         Gabor with apect ratio (1/e width)%                                       determined by windowParams.size%     'wedge'                         wedge with center and size%                                       in polar coordinates: (radius,angle)%%Outputs:%  window                           appendedd window%  x,y                              x,y matrices in visual angle coordinates%                                   made with meshgrid - same size as window% 3/5/98 gmb   Wrote it[x,y] =makeVisAngleMesh(display,size(window));for windNum = 1:size(windowParams,2)	center= windowParams(windNum).center;	sz = windowParams(windNum).size;	switch windowParams(windNum).type;	  case {'rect'}	    %rectangle centered at (.center(1),.center(2)) and 	    %width .size(1), height.size(2)	    if prod(size(sz)) == 1	      sz = [sz,sz];	    end	    id = ( x>= center(1)-sz(1)/2 & ...	         x<= center(1)+sz(1)/2 & ...	         y>= center(2)-sz(2)/2 & ...	         y<= center(2)+sz(2)/2);	     window = setval(window,id,1);	  case {'Gabor'}	    %Gabor centered at (.center(1),.center(2)) and 	    %1/e half-width of .size	    if prod(size(sz))==1	      sz =[sz,sz];	    end	    window = window + ...		exp(-((x-center(1)).^2)/sz(1).^2 -...	       	     ((y-center(2)).^2)/sz(2).^2);	    window = setval(window,window>1,1);	  case {'circle'}	    r = ((x-center(1)).^2)/sz(1).^2 +...	        ((y-center(2)).^2)/sz(2).^2;	    id = r<=1/4;	    window =setVal(window,id,1);	  case {'wedge'}	    r = sqrt( x.^2+y.^2);	    a = atan2(y,x);	    a(a<0) = a(a<0)+pi*2;	    center(2) = mod(center(2),pi*2);	    sz(2) = mod(sz(2),pi*2);	    if center(2)-sz(2)/2 <0	      a(a>pi) = a(a>pi) - 2*pi;	    end	    if center(2)+sz(2)/2 > pi*2	      a(a<pi) = a(a<pi) - 2*pi;	    end	    id = ( r>= center(1)-sz(1)/2 & ...	      r<= center(1)+sz(1)/2 & ...	      a>= center(2)-sz(2)/2 & ...	      a<= center(2)+sz(2)/2);	    window = setval(window,id,1);	  otherwise	    disp(['dunno "',windowParams.type,'"']);	endend