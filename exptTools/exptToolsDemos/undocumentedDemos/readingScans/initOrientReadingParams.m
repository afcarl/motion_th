function [stim, scan, display] = initReadingParams(expNum);if ~exist('expNum', 'var')	expNum = 0;	disp('No experiment number specified- doing default of 0.');enddisplay = usePredefinedDisplay;% SCAN PARAMS %% Parameters relevant to entire scanscan.numEpochs = 2;scan.ncycles = 6;scan.period = 36;	% secondsscan.scanDuration = scan.period * scan.ncycles;scan.prescanDuration = 6;	% secondsscan.startSecs = 6;scan.startScan = 4;% set params that are probably are common to all expsstim.text.size = 18;stim.text.font = 'Courier';stim.text.position = [0 0];  % vert, horiz- offsets from center in degstim.imageSize = [2 6];  % vert, horiz: size (in deg) of entire stim rect (will be centered)stim.lines.orientMean = 7;	% in degreesstim.lines.orientStdev = 2;	% in degreesstim.lines.thickness = 1;	% in pixelsstim.lines.spacing = 10;	% in pixelsstim.duration = 0.5;				% Stimulus duration (in seconds)scan.trialDuration = 3;scan.responseDuration = 1.5;		%secondsswitch expNumcase 0,		disp('Single word reading and orientation discrimination: Practice.');	scan.dispString = 'Is it an animal?  Is it tilted left or right?';	scan.feedbackStrings = {'Correct', 'Wrong', '?', '-'};	% no feedback	chdir('singleWord');	disp('Loading text...');	[stim.text.strings, stim.text.types] = loadTextFile('textItemsC');	chdir('..');case 1,		disp('Single word reading and orientation discrimination: A.');	scan.dispString = 'Is it an animal?  Is it tilted left or right?';	scan.feedbackStrings = {' ', ' ', ' ', ' '};	% no feedback	chdir('singleWord');	disp('Loading text...');	[stim.text.strings, stim.text.types] = loadTextFile('textItemsA');	chdir('..');case 2,		disp('Single word reading and orientation discrimination: B.');	scan.dispString = 'Is it an animal?  Is it tilted left or right?';	scan.feedbackStrings = {' ', ' ', ' ', ' '};	% no feedback	chdir('singleWord');	disp('Loading text...');	[stim.text.strings, stim.text.types] = loadTextFile('textItemsB');	chdir('..');otherwise,	error(['Experiment # ' num2str(expNum) ' is not configured!']);end	% Color infostim.stimLMS.dir = [1 1 1]';stim.stimLMS.scale = -.4;stim.backRGB.dir = [1 1 1]';stim.backRGB.scale = 0.5;stim.noiseHiLMS.dir = [1 1 1]';stim.noiseHiLMS.scale = .2;stim.noiseLoLMS.dir = [1 1 1]';stim.noiseLoLMS.scale = -.2;stim.stimRGB = cone2rgb(display, stim.stimLMS, stim.backRGB);stim.noiseLoRGB = cone2rgb(display, stim.noiseLoLMS, stim.backRGB);stim.noiseHiRGB = cone2rgb(display, stim.noiseHiLMS, stim.backRGB);% I noticed some odd behavior- stim.stimRGB.dir includes values that aren't% quite what they seem (e.g., 1 - (1.0e-13 * -0.8527) instead of 1)- this% screws up 'floor', so I'm specifying the precision before rounding.stim.stimRGB.dir = round(stim.stimRGB.dir*1e6)/1e6; % limit to six significant digitsstim.backRGB.dir = round(stim.backRGB.dir*1e6)/1e6;stim.noiseLoRGB.dir = round(stim.noiseLoRGB.dir*1e6)/1e6;stim.noiseHiRGB.dir = round(stim.noiseHiRGB.dir*1e6)/1e6;% Fixation parametersstim.fix.colors = [1 2]; 		% Reserved colors in cmapstim.fix.size = 0.25;				% Degreesstim.fix.position = [0 0];% convert some unitsstim.text.positionPix = round(stim.text.position./display.pixelSize);stim.imagePix = round(stim.imageSize./display.pixelSize);stim.frames = round(display.frameRate * stim.duration);scan.numTrialsPerEpoch = scan.period/scan.numEpochs/scan.trialDuration;if round(scan.numTrialsPerEpoch) ~= scan.numTrialsPerEpoch    error('SCAN PARAM ERROR: period/numEpochs is not an integer multiple of trialDuration!');end