function [newDataSum,dataSum,dataSumName] = doStaircaseWithFiles(display, ...                        stairParams, stimParams, trialGenFuncName, runPriority, ...						subjectName, condition, varargin)% [newDataSum,fullDataSum] = doStaircaseWithFiles(display, ...%                       stairParams, stimParams, trialGenFuncName, runPriority, ...%						subjectName, condition, ['optionFlag1'], ['optionFlag2'], ...)%% This routine is a wrapper for doStaircase.  It sets up the log file for% doStaircase and appends the staircase results to previous results from the% same staircase (that is, staircases run with the same subjectName and condition).% The arguments are the same as for doStaircase (see 'help doStaircase').  The difference,% though, is that doStaircaseWithFiles does not receive an FID as an argument.  Instead,% it should be passed a subjectName and a condition, both of which are strings.%% 12.09.98 - Written by WAPdataName = [subjectName condition];disp(['Running subject *' subjectName '* in condition *' condition '*. Data file = *' ...			dataName '*.']);disp([dataName '.log']);logFID(1) = fopen([dataName '.log'], 'at');fprintf(logFID(1), '%s\n', datestr(now));logFID(2) = 1;newDataSum = doStaircase(display, stairParams, stimParams, trialGenFuncName, runPriority, ...						logFID, varargin{:});fclose(logFID(1));dataSumName = [dataName 'Sum'];if exist(dataSumName,'file')    load(dataSumName);	dataSum(length(dataSum)+1:length(dataSum)+length(newDataSum)) = newDataSum;	save(dataSumName, 'dataSum');	disp(['DataSum file ' dataSumName ' updated.']);else	disp(['DataSum file ' dataSumName ' not found.']);	dataSum = struct(newDataSum);	save(dataSumName, 'dataSum');	disp(['New dataSum file ' dataSumName ' saved.']);end