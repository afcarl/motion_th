function img = drawLines(orientation, thickness, spacing, wide, high, colorIndex)% img = drawLines(orientation, thickness, spacing, wide, high, colorIndex)%	orientation is in degrees (0 = vertical)%	thickness is the line thickness in pixels%	spacing is the number of pixels between lines%	wide, high  are the dimentions of the entire image%	colorIndex is the value of the line pixels (background pixels are 0)%% Note that this function doesn't rotate the lines, it merely tilts them, % elongating them in the process.%% 99.02.25 RFD: wrote itnumLines = floor(wide/(spacing+thickness));halfSpace = floor(spacing/2);img = repmat([zeros(1,halfSpace) ones(1,thickness)*colorIndex zeros(1,halfSpace)],...				high, numLines);				n = wide - size(img, 2);if n < 0	% crop	img = img(:,ceil(-n/2):wide+floor(-n/2));else	% pad	img = [zeros(high, floor(n/2)) img zeros(high, ceil(n/2))];end% rotate the lines, constraining to the boundsy = [-ceil(high/2)+1:floor(high/2)];x = round(y*tan(orientation/180*pi));for i=1:high	if x(i) < 0		img(i,:) = [img(i,abs(x(i))+1:wide) zeros(1,abs(x(i)))];	else		img(i,:) = [zeros(1,x(i)) img(i,1:wide-x(i))];	endend