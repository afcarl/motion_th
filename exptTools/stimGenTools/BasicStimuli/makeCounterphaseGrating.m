function stimulus = makeCounterphaseGrating(display,stimulusSize,spatialFrequency,temporalFrequency,contrast,duration);%makeCounterphaseGrating(display,stimulusSize,spatialFrequency,temporalFrequency,contrast,duration);m=angle2pix(display,stimulusSize(1));n=angle2pix(display,stimulusSize(2));stimulus.spatialFrequency = spatialFrequency;stimulus.temporalFrequency = temporalFrequency;stimulus.contrast = contrast;stimulus.duration = duration;%[x,y] is a mesh grid in visual angle coordinates.[x,y] = meshgrid(linspace(-stimulusSize(2)/2,stimulusSize(2)/2,n),linspace(-stimulusSize(1)/2,stimulusSize(1)/2,m));img = 126*(sin(2*pi*spatialFrequency*x)+1)/2+3;img=insertFixation(display,img);stimulus.image(:,:,1) = uint8(img);ramp = [0,0,0,linspace(-1,1,253)]';%generate cmaps for counterphase modulating gratings.numFrames = getFrames(duration,display.frameRate);stimulus.cmap = uint8(zeros(256,3,numFrames));frameNum = 0;for time = linspace(0,duration,numFrames) 	frameNum = frameNum+1;	ct = contrast*sin(2*pi*temporalFrequency*time);	cmap = ((ct*ramp+1)*127.5)*ones(1,3);	stimulus.cmap(:,:,frameNum) = cmap;endstimulus.seq = [1,-(1:numFrames)];stimulus.imagePtr = [];