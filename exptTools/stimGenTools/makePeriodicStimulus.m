function stimulus = makePeriodicStimulus(display, params)% stimulus = makePeriodicStimulus(display, params)%% This function creates a periodic stimulus given the proper params.  All% animation is handled by colormap animation whenever possible.% Drifting stimuli that have a spatial envelope have to be bit-blit animated,% which can make life difficult (for example, these stimuli can not have% an associated temporal envelope).  These are best avoided whenever possible.%% This code replaces the older "generate" routines.  It fixes important% bugs, not the least of which had to do with the way contrast is computed.%% 99.03.09 - Created by Bill Press%% The params struct should have the following fields and subfields (fields in% brackets are entirely optional; other fields may be optional for certain% stimulus types):%% shape					'circle', 'rectangle', or 'annulus'%% size					degrees.  circle: diameter, rectangle: [X, Y],%						annulus: [outer diameter, width]%% duration				seconds%% type					'linear', 'circular', 'dartboard', 'solid', or 'blank'%% spatial.%		modulation		'sinusoidal' or 'square'%		frequency		cycles/degree (Hz)%		[phase]			radians.  Currently only for linear stimuli.%		[envelope.]		default: none%			shape		'gaussian' or 'raisedcos'.  Raised cosine only available%						for 'circle' shape.%			size		degrees. gaussian: standard deviation (radial for%						'annulus' shape) or [stdev x, stdev y].%						raised cosine: plateau diameter or width%		[linear.]		Used only for linear stimuli%			orientation	degrees. Orientation of linear grating%		[dartboard.]	Used only for dartboard stimuli%			frequency	cycles/circle (0.5 x number of subwedges)%			[phase]		radians.%			[magFlag]	Cortical magnification flag. Default: 0%			% temporal.%		modulation		'flickerSinusoid', 'flickerSquare', 'drift', or 'static'%		frequency		cycles/second (Hz)%		[phase]			radians%		[envelope.]		default: none%			shape		'gaussian' or 'raisedcos'%			[size]		seconds.  gaussian: standard deviation%						(default = duration/6 [FWHM=~0.395*duration])%						raisedcos: plateau length (default = 0.9*duration)%		[imgDirFlag]	0 or 1. Whether or not direction of motion for a%						drifting grating, as given by the frequency sign,%						is handled by the image's sawtooth orientation,%						as opposed to being done explicitly by the colormap.%						This is useful if you want to have two stimuli moving%						in different directions at the same speed.  I remember%						somebody once told me they didn't want to do this,%						so I made it disablable with this flag.%						Obviously, this is moot when the stimulus is not%						colormap animated.  Default 1.%		[memoryFlag]	0 or 1. Whether to colormap animate the entire%						duration of the stimulus (0) or to save memory by%						creating colormaps for only a single cycle (1), which%						get repeated for the duration of the stimulus.  While%						setting this flag may save memory, it will quantize%						the stimulus frequency to a multiple of the refresh%						rate. This cannot be used with a temporal envelope%						or when doing bit-blit animation.  Default: 0.%% [noise.]%		[type]			noise distribution type: 'uniform' or 'gaussian'%						(defaults to uniform).%		level			noise level.  %						For 'uniform' noise.type, this specifies the%						noise-to-signal proportion.%						For 'gaussian' noise.type, it specifies the standard%						deviation of the noise that is added to the signal.%						Note that the gaussian noise has a mean of 0, so some%						pixels get their intensity increased (+noise) and some%						get their intensity decreased (-noise).  Also note that%						the intensity is clipped to remain within (0,1) contrast%						bounds, so specifying a very large standard deviation%						will result in binary noise (and no signal).%% [angularRange]		[radians radians].  Range from -pi to pi in which to%						draw stimulus.  Default: draw full stimulus.%% [radialRange]			[innerRadius outerRadius].  Range in eccentricity in%						which to draw stimulus.	Default: draw full stimulus.%% [blank.]				region of stimulus to blank out. Default: none%		shape			'rectangle'%		size			degrees. [X Y]%% [stimLMS.]			Stimulus color%						default: [1 1 1], 1 (full contrast achromatic)%		dir				color direction. [L M S].%		scale			contrast (min 0, max determined by direction <=1)%% [stimRGB.]			Stimulus color (typically omitted) - don't use with stimLMS%						USE STIMLMS, EVEN FOR ACHROMATIC STIMULI, UNLESS YOU KNOW WHAT YOU ARE DOING%		dir				color direction. [R G B].%		scale			half contrast (min 0, max determined by direction <=0.5)%% [backRGB.]			Background color (typically omitted)%						default: [1 1 1], 0.5 (gray)%						If you set this value, you must still call%						setBackgroundRGB to have it be used as the background%		dir				color direction. [R G B].%		scale			contrast (min 0, max determined by direction [<=1])%% [fix.]				Fixation point parameters%		size			degrees. radius.%		[position]		degrees. [X Y]%		[colors]		reserved colors index. [inside outside][cmap,gamma] = makePeriodicColormaps (display, params);image = makePeriodicImages (display, params);if isfield(params,'fix')	if isfield(params.fix,'type')	% addFixation is the prefered way of									% inserting a fixation point		image = addFixation(display, image, params.fix);			else							% insertFixation is kept around for									% backward compatability		warning('Please update your params.fix struct.  Type ''help addFixation''.');		image = insertFixation(display, image, params.fix);	endendseq = makePeriodicSequence (display, params);if ~isempty(gamma)	stimulus = createStimulusStruct(image,cmap,seq,gamma);else	stimulus = createStimulusStruct(image,cmap,seq);end