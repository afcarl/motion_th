function [sounds, sampRate, type] = loadSoundFile(fileName, soundFilePath, path)% [sounds, sampRate, type] = loadSoundFile(fileName, [soundFilePath], [path])%%   Loads au-format sounds from files.  The sound filenames should be %   listed in the text file 'fileName' found at 'path'.  The sound files%   should live at 'soundFilePath'.%%	The text file containing the list of sound filenames should have the following format:%%	soundFilename1	sound1type%	soundFilname2	sound2type%	etc...%%   soundFilenameN is a string, soundNtype is anything (usually an integer code %	indicating what type of stimulus contained in soundFilenameN.).  The two should%	be separated by a tab.%%   All sounds should have the same sample rate (the returned value%   is from the last file). %%% NOTE: make sure you have the .au extension on the filename- matlab% will append that to any filename you give it, so the actual file should% include it even if you don't specify it in the filname list.%% NOTE: if you edit the text file listing the sound filenames in matlab,% make sure that you turn off the "tabs to spaces" option- the filename% and type must be separated by a real tab.%% 99.03.09 RFDoldPath = pwd;% read in all the filenamesif exist('path', 'var')    cd(path);endfp = fopen(fileName, 'rt');i = 1;while ~feof(fp)    line = fgetl(fp);    % line will be -1 if eof is hit and may be empty if there are blank lines    if isstr(line) & ~isempty(line)        [sndFilenames{i}, type{i}] = strtok(line,'	');        % strip leading tab from the type string        type{i} = strtok(type{i},'	');        i = i+1;    endendfclose(fp);cd(oldPath);% load the sound filesif exist('soundFilePath', 'var')    cd(soundFilePath);endn = length(sndFilenames);h = waitbar(0,'Loading sound files- please wait...');for i=1:n    eval('[sounds{i}, sampRate] = auread(sndFilenames{i});', ...		'error([''auread failed on file '' sndFilenames{i}]);');	waitbar(i/n);endclose(h);	cd(oldPath);