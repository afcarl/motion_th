function [stimulus,valuesUsed] = randomizePeriodicStimulus(display, stimulus, params, randomizeTable)% stimulus = randomizePeriodicStimulus(display, stimulus, params, randomizeTable)%% 05.10.99 - Written by ACH and WAP.  Use this function with randomizeStimulusEvent % (see doTrial).  You know what a stimulus is, and by now you better know what params% looks like (check out 'help makePeriodicStimulus' if not).  randomizeTable is a 2D cell array.% For each row, the left column is the name of the params field to be randomized,% the middle column is the type of parameters list ('minmax' for a range in% a uniform distribution or 'list' for a list of values).  The right column% lists the appropriate values in a vector.  If you want to extend these% options, such as picking values from a normal distribution and% specifying the distributions mean and stddev, by all means be our guest.for paramNum = 1:size(randomizeTable,1)	switch randomizeTable{paramNum,2}		case 'minmax',			range = randomizeTable{paramNum,3};			paramValue = rand*(range(2)-range(1)) + range(1);		case 'list',			whichValue = floor(rand*length(randomizeTable{paramNum,3})) + 1;			paramValue = randomizeTable{paramNum,3}(whichValue);		otherwise,			error('The range type must be specified as either ''minmax'' or ''list''');	end	valuesUsed{paramNum} = paramValue;		setParam = ['params.' randomizeTable{paramNum,1} '=' num2str(paramValue) ';'];	eval(setParam, 'error([''params does not contain the field '' randomizeTable{paramNum,1}]);');endstimulus.cmap = makePeriodicColormaps(display,params);stimulus.seq = makePeriodicSequence(display,params);