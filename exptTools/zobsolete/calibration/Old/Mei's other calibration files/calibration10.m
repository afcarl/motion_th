function index = calibration(whichPatch, whichGun,...                   stepSize, numRepeats, bgDAC)% index = calibration(whichPatch, whichGun, stepSize, %                     numRepeats, bgDAC)%% Displays color patches over neutral background, for% calibration measurements, mainly gamma curve measurements.%%  whichPatch --  %     1 = left patch; 2 = right patch (of the standard size)%       if whichPatch is any other single integer, patch is set%       to fill the whole screen;%     3 = dailyTest patch, sides=190, centered;%     if whichPatch is a 2-number matrix, the patch is%       centered at the location specified by the 2 numbers,%       and patch is the standard size;%     if whichPatch is a 4-number matrix, it is used as%       the patch rectangle%  whichGun   --  1 = red; 2 = green; 3 = blue;%     if a vector of 3 numbers is given, then it is taken as%     the color direction of the patch.%  stepSize -- DAC values from 0-1023, measure all 1024 levels or%              less? stepSize determines measurement resolution.%              if stepSize is a 3 vector, use it as%              [start end stepSize];%  bgDAC    -- DAC values of backgroundif (nargin==0) whichPatch = 1;endif (nargin<2) whichGun = [1 1 1] * 1023;endif (nargin<3) stepSize = [0 1023 340];endif (nargin<4) numRepeats = 1;endif (nargin<5) bgDAC = [700 700 700];   % = monitor intensity [.5 .5 .5]end% initialize variablesbgColor = 1;patchColor = 2;myClut = zeros(256,3);myClut(bgColor,:) = bgDAC;myClut(patchColor,:) = [0 0 0];patchH = 48;patchW = 48;xDist = 48;         % Distance of patch from horizontal centeryDist = 24;         % Distance of patch from vertical center% Set up screenHideCursor;bgRect = screen10('OpenScreen', bgColor-1, 0);bgH = bgRect(3) - bgRect(1);bgW = bgRect(4) - bgRect(2);xCenter = round(bgW/2);yCenter = round(bgH/2);if (length(whichPatch)==4) patchRect = whichPatch;endif (length(whichPatch)==2) xCenter = whichPatch(1); yCenter = whichPatch(2); patchRect = [ yCenter-patchH/2  xCenter-patchW/2 ...               yCenter+patchH/2  xCenter+patchW/2 ];endif (length(whichPatch)==1)  if (whichPatch == 1)    patchRect = [yCenter-yDist-patchH  xCenter-xDist-patchW ...                 yCenter-yDist         xCenter-xDist ];  elseif (whichPatch == 2)    patchRect = [yCenter+yDist         xCenter+xDist ...                 yCenter+yDist+patchH  xCenter+xDist+patchW];  elseif (whichPatch == 3)    patchRect = [yCenter-95 xCenter-95 yCenter+95 xCenter+95];  else    patchRect = bgRect;  endendscreen10('DrawRect', patchColor-1, patchRect)index = [];if (length(whichGun)==3) myClut(bgColor,:) = bgDAC; myClut(patchColor,:) = round(whichGun); screen10('SetClut', myClut); theKey = GetKey; % turn the whole screen into patchColor myClut(bgColor,:) = myClut(patchColor,:); screen10('SetClut', myClut); theKey = GetKey;else start = 0; finish = 1023; if (length(stepSize)==3)   start = stepSize(1);   finish = stepSize(2);   stepSize = stepSize(3); end for step = start:stepSize:(finish+stepSize-1)  if (step>finish) step=finish;  end  if (length(whichGun)==1) increment = step;  else increment = step * ones(whichGun);  end for repeat = 1:numRepeats  index = [index; step];  myClut(bgColor,:) = bgDAC;  myClut(patchColor,whichGun) = increment;  screen10('SetClut', myClut);  theKey = GetKey;  % turn the whole screen into patchColor  myClut(bgColor,:) = myClut(patchColor,:);  screen10('SetClut', myClut);  theKey = GetKey;  if (theKey=='0') break;  end end endendscreen10('CloseScreen');ShowCursor;