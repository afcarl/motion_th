function gammaValues = cmeterGammaCalib(tsize, gunColors, fbValues);% gammaValues = cmeterGammaCalib(tsize, gunColors, fbValues);% using cmeter to measure screen gamma curve%% tsize -- size of target square, as [ysize xsize].%          if tsize has 4 elements, treat as rectangle:%          [ysize xsize ycenter xcenter].%          if tsize has 1 element, target is a square.% gunColors -- which guns to measure. Should be in the range [0 1].%              For example, to measure red gun use [1 0 0].% fbValues -- Levels of framebuffer values to measure.%             (between 0 and 255 for 8-bit card, 0 and 1023 for 10 bit card)%if (length(tsize)==1)  tsize = [tsize tsize];end% Display a target so that we can aim and focus camera:[screenPtr, screenRect] = screen(0, 'OpenWindow', 0);HideCursor;if (length(tsize)==4)  xc = tsize(4);  yc = tsize(3);else  xc = (screenRect(RectRight) - screenRect(RectLeft))/2;  yc = (screenRect(RectBottom) - screenRect(RectTop))/2;endtargetRect([RectTop RectLeft RectBottom RectRight])= ...           [yc xc yc xc]+[-1 -1 1 1]*50;screen(screenPtr, 'FillRect', 1, targetRect);targetClut = 1;bgClut = 0;textClut = 255;targetMap = gray(256) * max(fbValues);targetMap(bgClut+1,:) = [0 0 0];		   targetMap(targetClut+1,:) = [1 1 1] * max(fbValues);		   targetMap(textClut+1,:) = [1 1 1] * max(fbValues);	screen(screenPtr, 'SetClut', targetMap);		   screen(screenPtr, 'TextFont', 20);screen(screenPtr, 'TextSize', 16);screen(screenPtr, 'TextStyle', 1);screen(screenPtr, 'DrawText', 'Aim and focus camera, then press any key', ...                               xc-150, yc+350, 255);pause(10);%% erase text, draw targettargetMap(textClut+1,:) = targetMap(bgClut+1,:);	targetRect([RectTop RectLeft RectBottom RectRight])= ...           [yc xc yc xc]+[-tsize(1) -tsize(2) tsize(1) tsize(2)]/2;screen(screenPtr, 'FillRect', 1, targetRect);screen(screenPtr, 'SetClut', targetMap);		   % prepare cameras = cmeter('Init');                 %% initialize cameracmeter('SetParams', 0, 0, 1);       %% set synch,integration time,avgcnt[synchFreq, s] = cmeterGetSynch;if (s~=0)  error('Synch measurement failed.');  screen(screenPtr, 'Close');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% gamma measurementavgcnt = 1;gammaValues = zeros(length(fbValues), size(gunColors,1));for gun = 1:size(gunColors,1) for fb = 1:length(fbValues)  targetMap(targetClut+1,:) = gunColors(gun,:) * fbValues(fb);  screen(screenPtr, 'Gamma', targetMap);		     screen(screenPtr, 'SetClut', gray(256)*255);		       integrationTime = cmeterGetTime(synchFreq);  cmeter('SetParams', 0, integrationTime, avgcnt);  s = cmeter('Measure', integrationTime*(avgcnt+2));    xyz = cmeter('XYZ');         %% get spectrum  gammaValues(fb, gun) = xyz(2); endendShowCursor;screen(screenPtr, 'Close');