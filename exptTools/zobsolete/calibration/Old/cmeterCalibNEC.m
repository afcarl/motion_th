% DATE:  August, 1997% AUTHOR:  Xuemei Zhang% PURPOSE:% Script to calibrate display monitor using "cmeter" function written by% D. Brainard for Matlab 5.1.  Steps through calibration targets to measure% first spectral then gamma properties of display device, reading % data from the SpectraScan PR650 colorimeter.% % UPDATE:% 2/12/98, hab modified Mei's scripts "cmeterCalib.m" to calibrate % NEC Flat Panel LCD Monitor with either vermillion in Jordan Hall or% with ochre in the Lucas Center%%% using cmeter to calibrate screen%% We need to decide on a resolute that we will use this device%% at then, do all the calibation at that resolution.  Right now%% we are going with 1280 x 1024 at 74 Hz.  This is the "native resolution"%% on the NEC 2000 and we believe it will run best at these rates.  HAB, ABP 02.12.98.%targetSize = [870 1152];% For NEC flat panel LCD, maximum resolution:monitor = 1;		% this is for a second monitor%monitor = 0; 		% this is for the Mac consolesynchFreq = 73.8	% 2/12/98 Refresh rate of monitor (NEC MultiSync LCD2000)targetSize = [1024 1280];gunColors = [1 0 0; 0 1 0; 0 0 1; 1 1 1] * 1023;[gunSpects, wavelengths, gunXYZ] = cmeterSpectraCalibNEC(targetSize, gunColors, monitor, synchFreq);%gunColors = [1 0 0; 0 1 0; 0 0 1];gunColors = [0 1 0];	% For testing purposes%fbValues = 0:31:1023;fbValues = 0:93:1023;	% For testing purposesgammaValues = cmeterGammaCalibNEC(targetSize, gunColors, fbValues, monitor, synchFreq);save calibRawFeb98.mat;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% make spectra fileload coneSpectra;spectraWavelength = 380:730;coneSpectra = coneSpectra(11:361,:);sampling = wavelengths(2) - wavelengths(1);monitorSpectra = interp1(wavelengths, gunSpects, spectraWavelength)/sampling;RGB2XYZ2 = gunXYZ(:, 1:3);RGB2LMS = coneSpectra' * monitorSpectra(:,1:3);save monitorSpectraFeb98.mat monitorSpectra spectraWavelength;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% make gamma table% HAB - 02.13.98 - This part shouldn't be necessary - seems like a hack%% Discard first few data points that are not monotonic%% (ideally, should re-measure to make sure)%t = [max(find(diff(gammaValues(:,1))<=0)) ...%     max(find(diff(gammaValues(:,2))<=0)) ...%     max(find(diff(gammaValues(:,3))<=0))];%gammaValues(1:max(t),:) = [];%fbValues(1:max(t)) = [];%% assume screen is truly black when framebuffer=0%% this is probably not true but the error is at most 0.5% for this calib.%fbValues = [0 fbValues];%gammaValues = [0 0 0; gammaValues];% Allen suggests subtracting the minimum measured output values to frame buffer% value [0 0 0] from all values, to remove the offset (rather than prepending % zeroes, as Mei did, which introduces a discontinuity and causes Matlab to % complain that there is non-monotonicity.gammaValues = gammaValues-min(gammaValues);%% normalize gammaTable to 1gammaValues = gammaValues * diag(1./max(gammaValues));%% interpolate to full sizefb = [0:1023]';gamma10 = interp1(fbValues, gammaValues, fb);n = 4095;levels = ([0:n]/n)';invGamma10 = zeros(n+1, 3);invGamma10(:,1) = interp1(gamma10(:,1), fb/1023, levels);invGamma10(:,2) = interp1(gamma10(:,2), fb/1023, levels);invGamma10(:,3) = interp1(gamma10(:,3), fb/1023, levels);invGamma10 = round(invGamma10*1023)/1023;%save newCalib RGB2LMS RGB2XYZ2 gamma10 invGamma10;save monitorGammaFeb98 RGB2LMS RGB2XYZ2 gamma10 invGamma10;