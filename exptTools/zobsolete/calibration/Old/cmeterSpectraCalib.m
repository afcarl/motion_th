function [gunSpects, wavelengths, xyz] = cmeterSpectraCalib(tsize, gunColors)% [gunSpects, wavelengths, xyz] = cmeterSpectraCalib(tsize, gunColors)%% using cmeter to measure spectral power distribution of phosphors%% tsize -- size of target square, as [ysize xsize].%          if tsize has 4 elements, treat as rectangle:%          [ysize xsize ycenter xcenter].%          if tsize has 1 element, target is a square.% gunColors -- gun colors to be measured% if (length(tsize)==1)  tsize = [tsize tsize];end% Display a small target so that we can aim and focus camera:[screenPtr, screenRect] = screen(0, 'OpenWindow', 0);HideCursor;if (length(tsize)==4)  xc = tsize(4);  yc = tsize(3);else  xc = (screenRect(RectRight) - screenRect(RectLeft))/2;  yc = (screenRect(RectBottom) - screenRect(RectTop))/2;endtargetRect([RectTop RectLeft RectBottom RectRight])= ...           [yc xc yc xc]+[-1 -1 1 1]*50;screen(screenPtr, 'FillRect', 1, targetRect);targetClut = 1;bgClut = 0;textClut = 255;targetMap = gray(256)*255;targetMap(bgClut+1,:) = [0 0 0];		   targetMap(targetClut+1,:) = gunColors(1,:);		   targetMap(textClut+1,:) = gunColors(1,:);	  screen(screenPtr, 'SetClut', targetMap);		   screen(screenPtr, 'TextFont', 20);screen(screenPtr, 'TextSize', 16);screen(screenPtr, 'TextStyle', 1);screen(screenPtr, 'DrawText', 'Aim and focus camera, then press any key', ...                               xc-150, yc+350, 255);GetKey;%% erase text, draw targettargetMap(textClut+1,:) = targetMap(bgClut+1,:);	targetRect([RectTop RectLeft RectBottom RectRight])= ...           [yc xc yc xc]+[-tsize(1) -tsize(2) tsize(1) tsize(2)]/2;screen(screenPtr, 'FillRect', 1, targetRect);screen(screenPtr, 'SetClut', targetMap);		   % prepare cameras = cmeter('Init');                 %% initialize cameracmeter('SetParams', 0, 0, 1);       %% set synch,integration time,avgcnt[synchFreq, s] = cmeterGetSynch;if (s~=0)  error('Synch measurement failed.');  screen(screenPtr, 'Close');end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% spectral measurementavgcnt = 5;gunSpects = zeros(101, size(gunColors,1));xyz = zeros(3, size(gunColors,1));for gun = 1:size(gunColors,1)%  targetMap([bgClut; textClut]+1,:) = gunColors(gun,:);  targetMap(targetClut+1,:) = gunColors(gun,:);  screen(screenPtr, 'Gamma', targetMap);		     screen(screenPtr, 'SetClut', gray(256)*255);		       integrationTime = cmeterGetTime(synchFreq);  cmeter('SetParams', 0, integrationTime, avgcnt);  s = cmeter('Measure', integrationTime*(avgcnt+2));    spect = cmeter('Spectrum');         %% get spectrum  gunSpects(:,gun) = spect(:,2);  xyz(:, gun) = cmeter('XYZ');endwavelengths = spect(:,1);ShowCursor;screen(screenPtr, 'Close');