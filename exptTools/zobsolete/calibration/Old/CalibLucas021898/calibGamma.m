% DATE:  	02.13.98% AUTHOR: 	Heidi Baseler% PURPOSE:	Measures the GAMMA function of a display device%			Uses "cmeter" function written by D. Brainard for Matlab 5.1.%			Steps through calibration targets, reading data from the SpectraScan % 			PR650 colorimeter.% % HISTORY:	This script was modified from Xuemei Zhang's script "cmeterCalib.m" %			written in August, 1997 on Turquoise.% 			Adapted by HAB to calibrate NEC Flat Panel LCD Monitor with either %			vermillion in Jordan Hall or with ochre in the Lucas Center% To check monitor numbering, go to "Monitors & Sound" under Control Panels, select% "Arrange" and click on "Identify the monitors"% Generally, for NEC (2nd) monitor, use monitor = 1; % for Mac console monitor, use monitor = 0monitor = 1;disp('Make sure the NEC LCD2000 monitor is plugged into the left-most video card slot')disp('To select the spatial and temporal parameters on the NEC MultiSync LCD2000,')disp('monitor, push the PROCEED button on monitor and scroll down to Display Mode')disp('If the display does not show V freq. of 73.8 Hz, it may be plugged into the wrong card')pause;synchFreq = 73.8		% Refresh rate of the NEC MultiSync LCD2000 - 02.12.98targetSize = [1024 1280];% Specify which colors to step through and calibrategunColors = [1 0 0; 0 1 0; 0 0 1];% Specify framebuffer values to measure%fbValues = 0:31:1023;fbValues = 0:93:1023;	% For testing purposes% Measure the gamma curves for each selected colorrawGammaValues = cmeterNECgamma(targetSize, gunColors, fbValues, monitor, synchFreq);% Allen suggests subtracting the minimum measured output values to frame buffer% value [0 0 0] from all values, to remove the offset (rather than prepending % zeroes, as Mei did, which introduces a discontinuity and causes Matlab % (interp1) to complain that the function is nonmonotonic.%gammaValues = rawGammaValues-(ones(size(rawGammaValues,1),1)*min(rawGammaValues));% Normalize gammaTable to 1gammaValues = gammaValues * diag(1./max(gammaValues));% Interpolate to full size (1023)fb = [0:1023]';gamma10 = interp1(fbValues, gammaValues, fb);% I'm not sure why Mei interpolates further to 4095 - perhaps% to avoid some rounding errors?  Changed it back to 1023 - HAB, 02.16.98%n = 4095;n = 1023;levels = ([0:n]/n)';invGamma10 = zeros(n+1, 3);invGamma10(:,1) = interp1(gamma10(:,1), fb/1023, levels);invGamma10(:,2) = interp1(gamma10(:,2), fb/1023, levels);invGamma10(:,3) = interp1(gamma10(:,3), fb/1023, levels);invGamma10 = round(invGamma10*1023)/1023;% Replace NaNs with 1.0 - HAB, 02.16.98boo=isnan(invGamma10);inds = find(boo);invGamma10(inds) = 1.0 * ones(size(inds));% Save the results in an output filesave GammaFeb98 gunColors gamma10 invGamma10 rawGammaValues gammaValues fbValues levels monitor synchFreq targetSize;quest = input('Test linearity of gamma values? [1=yes; 0=no]: ');if quest	% Test that linearity was achieved	inds = 1:93:1024;	linGammaValues = zeros(length(inds),3);	linFBvalues = 1023 * invGamma10(inds,:);	for k=1:3	  tgunColors = gunColors(k,:);	  tFBvalues = linFBvalues(:,k);	  linGammaValues(:,k) = cmeterNECgamma(targetSize, tgunColors, tFBvalues, monitor, synchFreq);	end	% Plot output	plot(1:length(inds),linFBvalues(:,1),'r',1:length(inds),linFBvalues(:,2),'g',1:length(inds),linFBvalues(:,3),'b')	figure;	plot(1:length(inds),linGammaValues(:,1),'r',1:length(inds),linGammaValues(:,2),'g',1:length(inds),linGammaValues(:,3),'b')else	return;end