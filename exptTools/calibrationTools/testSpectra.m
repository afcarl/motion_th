function testSpectra(gammaFile,spectraFile)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Close the loop and and make sure that we can get out cone isolating% stimuli, given the gamma tables, monitor spectra measures, and % cone sensors.  N.B.  Assumes that you've already got a gamma table measure% that you like.  See the code called 'calibGamma'.load(spectraFile);load(gammaFile);% Perturbation direction in LMS coordinatesincLMS = [0 0 1]';cmapSize = 1024;monitorRGB = monitorSpectra(:,1:3);RGB2LMS = coneSpectra' * monitorRGB;LMS2RGB = inv(RGB2LMS);bkgRGB = [0.5 0.5 0.5]';bkgLMS = RGB2LMS * bkgRGB;% This routine returns the scale factor that puts% the vector into the values between 1.0 and 0.0[scaleFac,meanRGB]=maxConeContrast(bkgLMS,incLMS,monitorRGB,coneSpectra);incLMSmax = scaleFac * incLMS;incRGB = LMS2RGB * incLMSmax;stimulusRGB = bkgRGB + incRGB;% Change the linear gun values to color map lut valuesbkgRGB1024 = round(bkgRGB * cmapSize);bkgCmapVal(1) = invGamma10(bkgRGB1024(1),1);bkgCmapVal(2) = invGamma10(bkgRGB1024(2),2);bkgCmapVal(3) = invGamma10(bkgRGB1024(3),3);stimulusRGB1024 = round(stimulusRGB * cmapSize);stimCmapVal(1) = invGamma10(stimulusRGB1024(1),1);stimCmapVal(2) = invGamma10(stimulusRGB1024(2),2);stimCmapVal(3) = invGamma10(stimulusRGB1024(3),3);% Assume that you already have these variables set, since you've saved the spectra before[bkgSpec, wavelengths] = cmeterOneMeas(targetSize, bkgCmapVal, monitor, synchFreq, 0);[stimSpec, wavelengths] = cmeterOneMeas(targetSize, stimCmapVal, monitor, synchFreq, 0);bkgSpec = interp1(wavelengths, bkgSpec, spectraWavelength)/sampling;stimSpec = interp1(wavelengths, stimSpec, spectraWavelength)/sampling;figureplot(spectraWavelength,bkgSpec,'r-');hold on;plot(spectraWavelength,stimSpec,'g-'); title('bkg (r-),stim(g-)');% Do the relevant checks.bkgLMSMeas = coneSpectra' * bkgSpec';stimLMSMeas = coneSpectra' * stimSpec';% This vector should be in the same color direction as incLMS vector% If so, you win!!!  pertMeas = stimLMSMeas - bkgLMSMeas;% change the 'pertMeas' and the 'incLMS' % vector to unit length in order to really check this out.disp('These should be close to one another if the calibration worked well.');incLMS/norm(incLMS,2)pertMeas/norm(pertMeas,2)