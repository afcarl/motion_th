%testCalibrate.mclose allnSteps = 9;  nRepeats = 1;%Generate display structure%monitor = 'NecLcd2000';%position = 'room 452';%card = 'Radius10-bit';%resolution = '640x480, 67Hz';%monitor = 'Multiscan720';%position = 'room 452';%card = 'Radius10-bit';%card = 'BuiltIn8-bit';%resolution = '640x480, 67Hz';display = initDisplayStruct(monitor,card,resolution,position);display.screenNumber = 1;%don't stick in linear gamma table.%display.gammaTable = linspace(0,2^display.pixelDepth-1,2^display.pixelDepth)';%be sure to be using entire range of dacValue values:%display.maxContrast = 1;display.maxIntensity = .1;%params.size = [12,12];%params.intensity = 10;dacValueList = linspace(0,display.numColors,nSteps)';dacValueList(nSteps) = display.numColors-1;%stimulus = makeRectStimulus(display,params);measuredLuminance = NaN*ones(nSteps,nRepeats);%Define the lowest dacValue to have zero luminance.measuredLuminance(1,:) = zeros(1,nRepeats);for repeat = 1:nRepeats	for dacValueNum = 2:nSteps		photoReading  = '';		while isempty(photoReading)			dacValue = dacValueList(dacValueNum);			%set the colormap entry to the current dacValue.			stimulus.cmap(params.intensity+1,:) = dacValue*ones(1,3);				%Open the screen			display = openScreen(display);			stimulus=createImagePointers(display,stimulus);				%show the stimulus			showStimulus(display,stimulus);			dispStringInCenter(display,['dacValue ',num2str(dacValue)],0.2,'white');			mouseclick;			% Close the one on-screen and many off-screen windows			SCREEN('CloseAll');						%prompt the user for the reading:			disp(['dacValue: ',num2str(dacValue)]);			photoReading = input('Enter photometer reading ','s');		end		measuredLuminance(dacValueNum,repeat) = str2num(photoReading);	endend%don't save the measurements%chdir([machineName,':Applications:Matlab 5.2:MRI:GammaTables:data']);%%filename = date;%evalstr=(['save ',filename,' dacValueList measuredLuminance monitor card']);%eval(evalstr);%Plot the data.plot(dacValueList,mean(measuredLuminance'),'k')hold onplot(dacValueList,measuredLuminance,'o')hold offxlabel('Dac value');ylabel('Luminance');title('Raw Luminance Measurements')%Calculate the Gamma correcting function%fit with a polynomialx = dacValueList*ones(1,nRepeats);p = polyfit(x(:),measuredLuminance(:),3);p = p([3,2,1]);%[err,pred] = fitPolyZeroIntercept(p,x(:),measuredLuminance(:));[p,pred] = fmins('fitPolyZeroIntercept',p,0,[],x(:),measuredLuminance(:));%[err,pred] = fitPolyZeroIntercept(p,x(:),measuredLuminance(:));%plot the fit.x = linspace(0,display.numColors-1,2^display.pixelDepth);[foo,y] = fitPolyZeroIntercept(p,x);hold onplot(x,y);%normalize the intensity values.y = (2^display.pixelDepth-1)*y/max(y);x = 0:(2^display.pixelDepth-1);%find the inversegoodVals = y>0;gammaTable = INTERP1(y(goodVals),x(goodVals),x(goodVals));gammaTable = [linspace(0,gammaTable(1),min(find(goodVals))-1),gammaTable];gammaTable = round(gammaTable)';figure(2)plot(x,gammaTable);xlabel('Desired dac value');ylabel('Dac value');grid