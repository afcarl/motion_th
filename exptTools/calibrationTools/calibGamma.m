% DATE:  	02.13.98% AUTHOR: 	Heidi Baseler, modified by William Press% PURPOSE:	Measures the GAMMA function of a display device%			Uses "cmeter" function written by D. Brainard for Matlab 5.1.%			Steps through calibration targets, reading data from the SpectraScan % 			PR650 colorimeter.% % HISTORY:	This script was modified from Xuemei Zhang's script "cmeterCalib.m" %			written in August, 1997 on Turquoise.% 			Adapted by HAB to calibrate NEC Flat Panel LCD Monitor with either %			vermillion in Jordan Hall or with ochre in the Lucas Center%%			Modified by WAP, 07.10.98.  Fixed bugs.  Separated testing%			routines and adjustable parameters to facilitate use.%			Modified slightly by Ress, 9/13/00. Fixed bugs in NEC subroutine,%			improved photometer problem fix. NOTE: The photometer must be%			OFF when this script is started. Turn it ON when prompted!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SET THESE PARAMETERSif ~exist('gammaFile', 'var')	gammaFile = fullfile(machinename, 'Desktop Folder', 'gamma');end% Generally, for NEC (2nd) monitor, use monitor = 1; % for Mac console monitor use monitor = 0if ~exist('monitor', 'var')	monitor = 1;endsynchFreq = 200/3;		% Low res  - standard for NEC MultiSync LCD2000targetSize = [50 50];% Decide beforehand whether will test for linearity after calibration.if ~exist('testLinearity')	testLinearity = 0;end% Specify which colors to step through and calibrategunColors = [1 0 0; 0 1 0; 0 0 1];% Specify framebuffer values to measurenSteps = 32;p = 1.7;	% slope of the power functionfbValues = round(1023*linspace(0,1,nSteps).^(1/p));% make sure that we can talk to the photometerwhile (cmeter('init') ~= 0)	disp(['Please turn the photometer on...']);	pause(1)end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BEGIN MEASUREMENTSdisp('Make sure the NEC LCD2000 monitor is plugged into the left-most video card slot')disp('To select the spatial and temporal parameters on the NEC MultiSync LCD2000,')disp('monitor, push the PROCEED button on monitor and scroll down to Display Mode.')disp('Be sure they match the selected parameters in the current calibration.')pause;% Measure the gamma curves for each selected colorrawGammaValues = cmeterNECgamma(targetSize, gunColors, fbValues, monitor, synchFreq);%save the raw values before we lose themsave([gammaFile 'RAW'], 'gunColors', 'rawGammaValues', 'fbValues', ...	'monitor', 'synchFreq', 'targetSize');gammaValues = rawGammaValues-(ones(size(rawGammaValues,1),1)*min(rawGammaValues));% Normalize gammaTable to 1gammaValues = gammaValues * diag(1./max(gammaValues));% Interpolate to full size (1023)fb = [0:1023]';gamma10 = interp1(fbValues, gammaValues, fb);n = 1023;levels = ([0:n]/n)';invGamma10 = zeros(n+1, 3);invGamma10(:,1) = interp1(gamma10(:,1), fb/1023, levels);invGamma10(:,2) = interp1(gamma10(:,2), fb/1023, levels);invGamma10(:,3) = interp1(gamma10(:,3), fb/1023, levels);invGamma10 = round(invGamma10*1023)/1023;% Replace NaNs with 1.0 - HAB, 02.16.98inds = find(isnan(invGamma10));invGamma10(inds) = 1.0 * ones(size(inds));gammaTable = invGamma10*1023;% Save the results in an output filesave(gammaFile, 'gunColors', 'gamma10', 'invGamma10', 'rawGammaValues', 'gammaValues', ...				'fbValues', 'levels', 'monitor', 'synchFreq', 'targetSize', 'gammaTable');if (testLinearity==1)	testGamma(gammaFile);end