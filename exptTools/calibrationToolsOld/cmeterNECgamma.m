function gammaValues = cmeterNECgamma(tsize, gunColors, fbValues, monitor, ...									  synchFreq, hitKey);%% gammaValues = cmeterNECgamma(tsize, gunColors, fbValues, monitor, synchFreq, hitKey);%% AUTHOR:  		Heidi Baseler% DATE:			02.12.98% HISTORY:		Adapted for NEC LCD2000 from "cmeterGammaCalib.m"%				written by Xuemei Zhang on Turquoise, 08.98% 				08/05/99 RFD added code to deal with a flakey photometer%				that turns off every so often.%% PURPOSE: 		Measure gamma curve using cmeter%% INPUTS:% tsize:		Size of target square, as [ysize xsize].%          		If tsize has 4 elements, treat as rectangle:%          		[ysize xsize ycenter xcenter].%         	 	If tsize has 1 element, target is a square.% gunColors:	Which guns to measure. Should be in the range [0 1].%              	For example, to measure red gun use [1 0 0].% fbValues:		Levels of framebuffer values to measure.%             	(between 0 and 255 for 8-bit card, 0 and 1023 for 10 bit card)% monitor:		Use 0 for console, 1 for second monitor (check monitor numbers)% synchFreq:	Refresh rate of monitor (can be floating point number)% hitKey:		optional.  A value of 1 means that the user will have%				to hit a key before calibration begins.  A value of 0 means that%				the calibration will begin directly.  Default=1.if (length(tsize)==1)  tsize = [tsize tsize];endif (nargin<6)	hitKey = 1;end% Open screen and find center[screenPtr, screenRect] = screen(monitor, 'OpenWindow', 0);HideCursor;if (length(tsize)==4)  xc = tsize(4);  yc = tsize(3);else  xc = (screenRect(RectRight) - screenRect(RectLeft))/2;  yc = (screenRect(RectBottom) - screenRect(RectTop))/2;endtargetClut = 1;bgClut = 0;textClut = 255;targetMap = gray(256) * max(fbValues);targetMap(bgClut+1,:) = [0 0 0];		   targetMap(targetClut+1,:) = [1 1 1] * max(fbValues);		   targetMap(textClut+1,:) = [1 1 1] * max(fbValues);	screen(screenPtr, 'SetClut', targetMap);		   % Display a target so that we can aim and focus camera:if (hitKey==1)	targetRect([RectTop RectLeft RectBottom RectRight])= ...           		[yc xc yc xc]+[-1 -1 1 1]*50;	screen(screenPtr, 'FillRect', targetClut, targetRect);	screen(screenPtr, 'TextFont', 20);	screen(screenPtr, 'TextSize', 16);	screen(screenPtr, 'TextStyle', 1);	screen(screenPtr, 'DrawText', 'Aim and focus camera, then press any key', ...                               	xc-150, yc+150, textClut);	GetChar;	screen(screenPtr, 'DrawText', 'Aim and focus camera, then press any key', ...    	                           xc-150, yc+150, bgClut);	screen(screenPtr, 'DrawText', 'OK.  You have 10 seconds to leave the room', ...    	                           xc-150, yc+150, textClut);	pause(10); % Give you enough time to leave the room and shut the doorend% Erase text, draw calibration targettargetMap(textClut+1,:) = targetMap(bgClut+1,:);	targetRect([RectTop RectLeft RectBottom RectRight])= ...           [yc xc yc xc]+[-tsize(1) -tsize(2) tsize(1) tsize(2)]/2;screen(screenPtr, 'FillRect', targetClut, targetRect);screen(screenPtr, 'SetClut', targetMap);		   % prepare cameras = cmeter('Init');                 %% initialize cameracmeter('SetParams', 0, 0, 1);       %% set synch,integration time,avgcnt% This part just won't work, so set the monitor frequency as an input variable above% HAB 02.12.98 [synchFreq, s] = cmeterGetSynch;% if (s~=0)%  error('Synch measurement failed.');%  screen(screenPtr, 'Close');% end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Gamma measurementavgcnt = 1;gammaValues = zeros(length(fbValues), size(gunColors,1));for gun = 1:size(gunColors,1)  for fb = 1:length(fbValues)    targetMap(targetClut+1,:) = gunColors(gun,:) * fbValues(fb);%% HAB 02.13.98  - Must explicitly set Gamma and SetClut to 10 bits! % Help for "SCREEN Gamma?" says:% Normally 'Gamma' gets the dacSize from the video driver's gamma table and builds % the new gamma table accordingly. However, the Radius Thunder video driver wrongly% reports a dacSize of 8 after a null gamma table has been loaded (e.g. by% 'OpenWindow'). As a work-around for this video driver bug, you can optionally% specify the dacSize, overriding any that we got by examining any existing gamma% table. If dacSize>8 then the gamma table uses 16 bits per entry, otherwise it% uses 8 bits per entry. % Help for "SCREEN SetClut?" says:% Note: the drivers of more-than-8-bit DACs are inconsistent. For some you supply% more than 8 bits to 'SetClut'; for others you supply more than 8 bits to% 'Gamma'. We intend to take care of this for you in a future version of% 'SetClut'. Let us know if you want this feature.%    screen(screenPtr, 'Gamma', targetMap, 10);		       screen(screenPtr, 'SetClut', gray(256)*255);		% 08/05/99 RFD added the following 5 lines to deal with a flakey photometer!	while cmeter('Init') == -1		sysbeep;		pause(5);	end;    integrationTime = cmeterGetTime(synchFreq);    cmeter('SetParams', 0, integrationTime, avgcnt);    s = cmeter('Measure', integrationTime*(avgcnt+2));      xyz = cmeter('XYZ');         %% get spectrum    gammaValues(fb, gun) = xyz(2);  endendShowCursor;screen(screenPtr, 'Close');