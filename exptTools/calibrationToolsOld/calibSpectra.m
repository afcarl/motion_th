%  Script%% DATE:  	02.13.98% AUTHOR: 	Heidi Baseler, Allen Poirson% PURPOSE:	Measures the SPECTRA of a display device%			Uses "cmeter" function written by D. Brainard for Matlab 5.1.%			Steps through calibration targets, reading data from the SpectraScan % 			PR650 colorimeter.% % HISTORY:	This script was modified from Xuemei Zhang's script "cmeterCalib.m" %			written in August, 1997 on Turquoise.% 			Adapted by HAB to calibrate NEC Flat Panel LCD Monitor with either %			vermillion in Jordan Hall or with ochre in the Lucas Center%			7.10.98 - WAP changed organization and fixed bugs.%			09.08.98 - WAP/BW inserted interpPR650, changed call to%				cmeterNecSpectra to cmeterMeasureSpectra, more cleaning%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SET THESE PARAMETERS% Output filespectraFile = 'NEC3TSpectra';% Must exist and be read in for checking%%gammaFile = 'Turquoise:Applications:MATLAB 5.2:MRI:GammaTables:ViewSonicRadius-10bit';gammaFile = 'NEC3TRadius-10bit';% To check monitor numbering, go to "Monitors & Sound" under Control Panels, select% "Arrange" and click on "Identify the monitors"% Generally, for NEC (2nd) monitor, use monitor = 1; % for Mac console monitor, use monitor = 0monitor = 1;% To select the spatial and temporal parameters on the NEC MultiSync LCD2000 monitor,% push the "PROCEED" button on monitor and scroll down to "Display Mode"synchFreq = 200/3;		% Low res  - standard for NEC MultiSync LCD2000targetSize = [640 480];% Choose the gun values and maximum value you'd like to measure% Maximum value = 1023 for 10-bit board, 255 for 8-bit boardgunColors = [1 0 0; 0 1 0; 0 0 1; 1 1 1];checkMonitorValues(gammaFile, synchFreq, targetSize, monitor);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BEGIN MEASUREMENTS% Measure the spectra[gunSpects, prWavelengths, gunXYZ] = ...	cmeterMeasurespectra(targetSize, gunColors, monitor, synchFreq);% Plot the resultsplot(prWavelengths,gunSpects(:,1),'r', ...		prWavelengths,gunSpects(:,2),'g',...		prWavelengths,gunSpects(:,3),'b',...		prWavelengths,gunSpects(:,4),'k')% To test for additivity, first plot measured white spectrum (all guns on)figure;plot(prWavelengths,gunSpects(:,4),'b')hold on% and then plot sum of 3 gun spectratestw=sum((gunSpects(:,1:3)'));plot(prWavelengths,testw,'r')title('Measured white = blue trace; Summed guns = red trace')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Calculate and save spectra of displaymonitorSpectra = zeros(361,size(gunColors,1));for ii=1:size(gunColors,1)	monitorSpectra(:,ii) = interpPR650([prWavelengths, gunSpects(:,ii)]);endplot([370:730],monitorSpectra)title('Monitor Spectra (watts/sr/m^2/nm');% monitorSpectra = interp1(wavelengths, gunSpects, spectraWavelength)/sampling;save(spectraFile, 'monitorSpectra', 'gunSpects', 'gammaFile', ...					'prWavelengths', 'gunColors', 'monitor', 'targetSize', ...					'synchFreq', 'gunXYZ');% testSpectra(gammaFile, spectraFile);