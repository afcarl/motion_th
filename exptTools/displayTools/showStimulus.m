function timing=showStimulus(display,stimulus,runPriority,showTiming)%timing = showStimulus(display,stimulus,runPriority,showTiming)if nargin==0	disp('Initializing showStimulus');	returnendif ~exist('runPriority')	runPriority = 0;  %use the nicest priority by defaultendif ~exist('showTiming')	showTiming = 0;endif isfield(stimulus, 'gamma')	gammaFlag = 1;else	gammaFlag = 0;endif ~isfield(stimulus,'imagePtr')	%Generate image pointers for each image by calling	disp('WARNING: Creating image pointers before stimulus presentation.');	disp('         This should be done before calling "showStimulus" for');	disp('         accurate timing.  See "createImagePointers" for help.');	stimulus = createImagePointers(display,stimulus);endnFrames = length(stimulus.seq);HideCursor;nCmap=size(stimulus.cmap,3);nImages = length(stimulus.imagePtr);priority(runPriority);s = getSecs;for frame = 1:nFrames	imgOrCmapNum = stimulus.seq(frame);	%put in an image		if imgOrCmapNum>0		   		imgNum = mod(imgOrCmapNum-1,nImages)+1;		SCREEN(display.windowPtr,'WaitVBL');		SCREEN('CopyWindow',stimulus.imagePtr(imgNum),display.windowPtr,stimulus.srcRect,stimulus.destRect);	%put in a color table	elseif imgOrCmapNum<0      		cmapNum = mod(-imgOrCmapNum-1,nCmap)+1;		cmap = double(stimulus.cmap(:,:,cmapNum));		%cmap = insertReservedCols(display,cmap);		if gammaFlag			SCREEN(display.windowPtr,'Gamma',stimulus.gamma(:,:,cmapNum),display.pixelDepth);		end		SCREEN(display.windowPtr,'SetClut',cmap);  %%%% This needs to be changed to SCREEN(display.windowPtr,'SetClut',cmap,0,10) for 10-bit use	%seq(frame) = 0; do nothing this frame.	else 								SCREEN(display.windowPtr,'WaitVBL');	end		endtiming = getSecs-s;if showTiming	disp(['Stimulus run time: ',num2str(timing),' seconds.']);endpriority(0);